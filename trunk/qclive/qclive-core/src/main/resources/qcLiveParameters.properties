################################################################################
# Software License, Version 1.0 Copyright 2011 SRA International, Inc.
# Copyright Notice.  The software subject to this notice and license includes both human
# readable source code form and machine readable, binary, object code form (the "caBIG
# Software").
#
# Please refer to the complete License text for full details at the root of the project.
################################################################################

###### Portal Properties ##############
tcga.portal.enableEmail = ${tcga.portal.enableEmail}
tcga.portal.defaultFromAddress = ${tcga.portal.defaultFromAddress}
tcga.portal.defaultReplyTo = ${tcga.portal.defaultReplyTo}
tcga.portal.defaultFromName = ${tcga.portal.defaultFromName}
tcga.portal.subjectPrefix = ${tcga.portal.subjectPrefix}

###### DCC Properties #########
tcga.dcc.defaultFromAddress = ${tcga.dcc.defaultFromAddress}
tcga.dcc.defaultReplyTo = ${tcga.dcc.defaultReplyTo}
tcga.dcc.defaultCcAddress = ${tcga.dcc.defaultCcAddress}
tcga.dcc.defaultFromName = ${tcga.dcc.defaultFromName}
tcga.dcc.archive.enableEmail = ${tcga.dcc.archive.enableEmail}
tcga.dcc.subjectPrefix = ${tcga.dcc.subjectPrefix}
tcga.dcc.failedmailto = ${tcga.dcc.failedmailto}
tcga.dcc.ncbiDownloadDirectory = ${tcga.dcc.ncbiDownloadDirectory}
tcga.dcc.ncbiCronTriggerTimer = ${tcga.dcc.ncbiCronTriggerTimer}
tcga.dcc.gscMaterializedViewRefreshTriggerTimer = ${tcga.dcc.gscMaterializedViewRefreshTriggerTimer}
tcga.dcc.piReportCronFrequencyTimer = ${tcga.dcc.piReportCronFrequencyTimer}
tcga.dcc.serverUrl = ${tcga.dcc.serverUrl}
tcga.dcc.usageLoggerDirectory = ${tcga.dcc.usageLoggerDirectory}
tcga.dcc.usageLoggerFileName = ${tcga.dcc.usageLoggerFileName}
tcga.dcc.usageLoggerEnabled = ${tcga.dcc.usageLoggerEnabled}
tcga.dcc.mvJobRunner.active = ${tcga.dcc.mvJobRunner.active}
tcga.dcc.usageLogger.writeToDb = ${tcga.dcc.usageLogger.writeToDb}
tcga.mount.root = ${tcga.mount.root}
tcga.dcc.debugLevel = ${tcga.dcc.debugLevel}
tcga.dcc.waitBeforeProcessingArchive = ${tcga.dcc.waitBeforeProcessingArchive}
tcga.dcc.publicDeployRoot = ${tcga.dcc.publicDeployRoot}
tcga.dcc.privateDeployRoot = ${tcga.dcc.privateDeployRoot}
tcga.dcc.emailBCC = ${tcga.dcc.emailBCC}
tcga.dcc.delayBeforeStartingQCLiveChecking = ${tcga.dcc.delayBeforeStartingQCLiveChecking}
tcga.dcc.delayBetweenFileDoneUploadingCheck = ${tcga.dcc.delayBetweenFileDoneUploadingCheck}
tcga.dcc.timeToWaitForMD5 = ${tcga.dcc.timeToWaitForMD5}
tcga.dcc.depositDirectoryPollInterval = ${tcga.dcc.depositDirectoryPollInterval}
# number of experiment checker queues
tcga.dcc.qcLiveNumberOfQueues = ${tcga.dcc.qcLiveNumberOfQueues}
# number of upload checker queues
tcga.dcc.qcLiveUploaderNumberOfQueues = ${tcga.dcc.qcLiveUploaderNumberOfQueues}
tcga.dcc.qcLiveWaitHours = ${tcga.dcc.qcLiveWaitHours}
tcga.dcc.qcLiveInitialWaitMinutes = ${tcga.dcc.qcLiveInitialWaitMinutes}
tcga.dcc.qcLiveClinicalLoaderWaitMinutes = ${tcga.dcc.qcLiveClinicalLoaderWaitMinutes}
tcga.dcc.qcLiveBiotabWaitMinutes= ${tcga.dcc.qcLiveBiotabWaitMinutes}
tcga.dcc.qcLiveClinicalLoaderThreadCount = ${tcga.dcc.qcLiveClinicalLoaderThreadCount}
tcga.dcc.biotabGeneratorDelayMinutes=${tcga.dcc.biotabGeneratorDelayMinutes}
tcga.dcc.biotabGenerationCronExpression=${tcga.dcc.biotabGenerationCronExpression}
tcga.dcc.biotabSchedulerThreadPool=${tcga.dcc.biotabSchedulerThreadPool}
#retry period in milliseconds
tcga.dcc.md5ValidationRetryPeriod = ${tcga.dcc.md5ValidationRetryPeriod}
tcga.dcc.md5ValidationRetryAttempts = ${tcga.dcc.md5ValidationRetryAttempts}
tcga.dcc.qcLiveSubmissionWindowHours = ${tcga.dcc.qcLiveSubmissionWindowHours}
tcga.dcc.archiveLoggerLocal = ${tcga.dcc.archiveLoggerLocal}
tcga.dcc.biMonthly.poc.name = ${tcga.dcc.biMonthly.poc.name}
tcga.dcc.biMonthly.poc.email = ${tcga.dcc.biMonthly.poc.email}
tcga.dcc.biMonthly.poc.phone = ${tcga.dcc.biMonthly.poc.phone}
tcga.dcc.dataUseDisclaimerLocation = ${tcga.dcc.dataUseDisclaimerLocation}

tcga.dcc.qcLive.Active = ${tcga.dcc.qcLive.Active}
tcga.dcc.qcLive.validateXML = ${tcga.dcc.qcLive.validateXML}
tcga.dcc.dirsToWatch = ${tcga.dcc.dirsToWatch}
tcga.dcc.bulkReceivedWorkingDirectory= ${tcga.dcc.bulkReceivedWorkingDirectory}
tcga.dcc.archiveOfflineRoot = ${tcga.dcc.archiveOfflineRoot}
tcga.dcc.failedArchiveRoot = ${tcga.dcc.failedArchiveRoot}
tcga.dcc.quartzSchedulerWaitForJobsToCompleteOnShutdown = ${tcga.dcc.quartzSchedulerWaitForJobsToCompleteOnShutdown}
tcga.dcc.schedulerShouldUseDatabase = ${tcga.dcc.schedulerShouldUseDatabase}
tcga.dcc.autoloader.enabled = ${tcga.dcc.autoloader.enabled}
tcga.dcc.autoloader.threadCount = ${tcga.dcc.autoloader.threadCount}
tcga.dcc.autoloader.switchOnTime = ${tcga.dcc.autoloader.switchOnTime}
tcga.dcc.autoloader.switchOffTime = ${tcga.dcc.autoloader.switchOffTime}

tcga.dcc.tcgaVcfVersion=${tcga.dcc.tcgaVcfVersion}

##### Common Exception Emails #####
tcga.dcc.error.to = ${tcga.dcc.error.to}
tcga.dcc.error.subject = ${tcga.dcc.error.subject}
tcga.dcc.mailHost = ${tcga.dcc.mailHost}

##### data source properties ####
tcga.dcc.diseaseDataSources = ${tcga.dcc.diseaseDataSources}

##### BCR element names ####
tcga.dcc.bcr.uuidsRequiredInXml=${tcga.dcc.bcr.uuidsRequiredInXml}
tcga.dcc.bcr.aliquotElementXPath = ${tcga.dcc.bcr.aliquotElementXPath}
tcga.dcc.bcr.aliquotBarcodeElementName = ${tcga.dcc.bcr.aliquotBarcodeElementName}
tcga.dcc.bcr.aliquotUuidElementName=${tcga.dcc.bcr.aliquotUuidElementName}
tcga.dcc.bcr.shipDayElementName = ${tcga.dcc.bcr.shipDayElementName}
tcga.dcc.bcr.shipMonthElementName = ${tcga.dcc.bcr.shipMonthElementName}
tcga.dcc.bcr.shipYearElementName = ${tcga.dcc.bcr.shipYearElementName}
tcga.dcc.bcr.dayOfPrefix = ${tcga.dcc.bcr.dayOfPrefix}
tcga.dcc.bcr.monthOfPrefix = ${tcga.dcc.bcr.monthOfPrefix}
tcga.dcc.bcr.yearOfPrefix = ${tcga.dcc.bcr.yearOfPrefix}
tcga.dcc.bcr.allowLocalSchema=${tcga.dcc.bcr.allowLocalSchema}
tcga.dcc.bcr.clinicalExclusionPatterns = ${tcga.dcc.bcr.clinicalExclusionPatterns}
tcga.dcc.bcr.datesToValidate = ${tcga.dcc.bcr.datesToValidate}
tcga.dcc.bcr.datesToCompare = ${tcga.dcc.bcr.datesToCompare}
# the date used for calculating elapsed days for clinical files
tcga.dcc.bcr.basisDateNameForClinical = ${tcga.dcc.bcr.basisDateNameForClinical}
# the date used for calculating elapsed days for biospecimen files
tcga.dcc.bcr.basisDateNameForBiospecimen = ${tcga.dcc.bcr.basisDateNameForBiospecimen}
# prefix for elapsed time element
tcga.dcc.bcr.elapsedElementPrefix = ${tcga.dcc.bcr.elapsedElementPrefix}
tcga.dcc.bcr.birthDateElementName = ${tcga.dcc.bcr.birthDateElementName}
# these dates will be removed and replaced with elapsed times
tcga.dcc.bcr.cdeForDatesToObscure = ${tcga.dcc.bcr.cdeForDatesToObscure}
# these dates will not be obscured (all other dates will be obscured, ie replaced with an elapsed time)
tcga.dcc.bcr.datesNotToObscure = ${tcga.dcc.bcr.datesNotToObscure}
# prefix for calculated age element, including namespace
tcga.dcc.bcr.ageAtPrefix = ${tcga.dcc.bcr.ageAtPrefix}
# CDE for the "age at basis date" element, if any
tcga.dcc.bcr.ageAtBasisDateCDE = ${tcga.dcc.bcr.ageAtBasisDateCDE}
# TCGA additional files (files other than the data files)
tcga.dcc.archive.additionalFiles = ${tcga.dcc.archive.additionalFiles}
#The patient's cutoff age at initial diagnosis. The age value should be floored to that cutoff value if it is higher.
tcga.dcc.bcr.cutoffAgeAtInitialDiagnosis = ${tcga.dcc.bcr.cutoffAgeAtInitialDiagnosis}
#The lower bound for the days to birth (based on being 90 years old at initial diagnosis)
tcga.dcc.bcr.daysToBirthLowerBound = ${tcga.dcc.bcr.daysToBirthLowerBound}
#The element name for the BCR patient barcode
tcga.dcc.bcr.bcrPatientBarcodeElementName = ${tcga.dcc.bcr.bcrPatientBarcodeElementName}
#shipment portion element names
tcga.dcc.bcr.shipmentPortionPath=${tcga.dcc.bcr.shipmentPortionPath}
tcga.dcc.bcr.bcrShipmentPortionUuidElementName=${tcga.dcc.bcr.bcrShipmentPortionUuidElementName}
tcga.dcc.bcr.centerIdElementName=${tcga.dcc.bcr.centerIdElementName}
tcga.dcc.bcr.plateIdElementName=${tcga.dcc.bcr.plateIdElementName}
tcga.dcc.bcr.shipmentPortionBcrAliquotBarcodeElementName=${tcga.dcc.bcr.shipmentPortionBcrAliquotBarcodeElementName}
tcga.dcc.bcr.shipmentPortionShipDayElementName=${tcga.dcc.bcr.shipmentPortionShipDayElementName}
tcga.dcc.bcr.shipmentPortionShipMonthElementName=${tcga.dcc.bcr.shipmentPortionShipMonthElementName}
tcga.dcc.bcr.shipmentPortionShipYearElementName=${tcga.dcc.bcr.shipmentPortionShipYearElementName}

# regular expression patterns for valid BCR clinical XSD versions
tcga.dcc.bcr.validXsdDomainPattern = ${tcga.dcc.bcr.validXsdDomainPattern}
tcga.dcc.bcr.validXsdPrefixPattern = ${tcga.dcc.bcr.validXsdPrefixPattern}
tcga.dcc.bcr.validXsdVersionPattern = ${tcga.dcc.bcr.validXsdVersionPattern}

#Maf File Versions
tcga.dcc.mafVersion.FirstGen = ${tcga.dcc.mafVersion.FirstGen}
tcga.dcc.mafVersion.NextGen = ${tcga.dcc.mafVersion.NextGen}
tcga.dcc.mafVersion.RNASeq = ${tcga.dcc.mafVersion.RNASeq}

# valid platforms for clinical archives
tcga.dcc.validClinicalPlatforms=${tcga.dcc.validClinicalPlatforms}

tcga.dcc.level2CacheGenerator.scheduler.autoStartup = ${tcga.dcc.level2CacheGenerator.scheduler.autoStartup}
tcga.dcc.level2CacheGenerator.scheduler.threadCount = ${tcga.dcc.level2CacheGenerator.scheduler.threadCount}
#common properties shared with DAM
# specify  minimum number of expected rows for hint query.
tcga.dcc.minExpectedRowsToUseHintQuery = ${tcga.dcc.minExpectedRowsToUseHintQuery}
tcga.dcc.cachefileDirectory = ${tcga.dcc.cachefileDirectory}
tcga.dcc.cacheFileDistroDirectory = ${tcga.dcc.cacheFileDistroDirectory}
tcga.dcc.tmp_cachefileDirectory = ${tcga.dcc.tmp_cachefileDirectory}
#clinical protected cache files root dir
tcga.dcc.protectedCacheFilesRootDir =${tcga.dcc.protectedCacheFilesRootDir}
tcga.dcc.publicCacheFilesRootDir =${tcga.dcc.publicCacheFilesRootDir}
tcga.dcc.bioTabTemplateFilesRootDir = ${tcga.dcc.bioTabTemplateFilesRootDir}
# should be delimited by ,
tcga.dcc.bioTabTemplateFiles=${tcga.dcc.bioTabTemplateFiles}
#Cron expression for running biospecimen platform
tcga.dcc.biospecimenMetadataPlatformsCronExpression=${tcga.dcc.biospecimenMetadataPlatformsCronExpression}
tcga.dcc.bcr.patientElementUUIDXPath=${tcga.dcc.bcr.patientElementUUIDXPath}